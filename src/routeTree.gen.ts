/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ErrorTestRouteImport } from './routes/error-test'
import { Route as AboutRouteImport } from './routes/about'
import { Route as R404RouteImport } from './routes/404'
import { Route as TodosRouteRouteImport } from './routes/todos/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TodosIndexRouteImport } from './routes/todos/index'
import { Route as TodosNewRouteImport } from './routes/todos/new'
import { Route as TodosTodoIdRouteImport } from './routes/todos/$todoId'
import { Route as TodosTodoIdEditRouteImport } from './routes/todos/$todoId.edit'

const ErrorTestRoute = ErrorTestRouteImport.update({
  id: '/error-test',
  path: '/error-test',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const R404Route = R404RouteImport.update({
  id: '/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const TodosRouteRoute = TodosRouteRouteImport.update({
  id: '/todos',
  path: '/todos',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TodosIndexRoute = TodosIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TodosRouteRoute,
} as any)
const TodosNewRoute = TodosNewRouteImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => TodosRouteRoute,
} as any)
const TodosTodoIdRoute = TodosTodoIdRouteImport.update({
  id: '/$todoId',
  path: '/$todoId',
  getParentRoute: () => TodosRouteRoute,
} as any)
const TodosTodoIdEditRoute = TodosTodoIdEditRouteImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => TodosTodoIdRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/todos': typeof TodosRouteRouteWithChildren
  '/404': typeof R404Route
  '/about': typeof AboutRoute
  '/error-test': typeof ErrorTestRoute
  '/todos/$todoId': typeof TodosTodoIdRouteWithChildren
  '/todos/new': typeof TodosNewRoute
  '/todos/': typeof TodosIndexRoute
  '/todos/$todoId/edit': typeof TodosTodoIdEditRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/about': typeof AboutRoute
  '/error-test': typeof ErrorTestRoute
  '/todos/$todoId': typeof TodosTodoIdRouteWithChildren
  '/todos/new': typeof TodosNewRoute
  '/todos': typeof TodosIndexRoute
  '/todos/$todoId/edit': typeof TodosTodoIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/todos': typeof TodosRouteRouteWithChildren
  '/404': typeof R404Route
  '/about': typeof AboutRoute
  '/error-test': typeof ErrorTestRoute
  '/todos/$todoId': typeof TodosTodoIdRouteWithChildren
  '/todos/new': typeof TodosNewRoute
  '/todos/': typeof TodosIndexRoute
  '/todos/$todoId/edit': typeof TodosTodoIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/todos'
    | '/404'
    | '/about'
    | '/error-test'
    | '/todos/$todoId'
    | '/todos/new'
    | '/todos/'
    | '/todos/$todoId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/404'
    | '/about'
    | '/error-test'
    | '/todos/$todoId'
    | '/todos/new'
    | '/todos'
    | '/todos/$todoId/edit'
  id:
    | '__root__'
    | '/'
    | '/todos'
    | '/404'
    | '/about'
    | '/error-test'
    | '/todos/$todoId'
    | '/todos/new'
    | '/todos/'
    | '/todos/$todoId/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  TodosRouteRoute: typeof TodosRouteRouteWithChildren
  R404Route: typeof R404Route
  AboutRoute: typeof AboutRoute
  ErrorTestRoute: typeof ErrorTestRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/error-test': {
      id: '/error-test'
      path: '/error-test'
      fullPath: '/error-test'
      preLoaderRoute: typeof ErrorTestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/todos': {
      id: '/todos'
      path: '/todos'
      fullPath: '/todos'
      preLoaderRoute: typeof TodosRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/todos/': {
      id: '/todos/'
      path: '/'
      fullPath: '/todos/'
      preLoaderRoute: typeof TodosIndexRouteImport
      parentRoute: typeof TodosRouteRoute
    }
    '/todos/new': {
      id: '/todos/new'
      path: '/new'
      fullPath: '/todos/new'
      preLoaderRoute: typeof TodosNewRouteImport
      parentRoute: typeof TodosRouteRoute
    }
    '/todos/$todoId': {
      id: '/todos/$todoId'
      path: '/$todoId'
      fullPath: '/todos/$todoId'
      preLoaderRoute: typeof TodosTodoIdRouteImport
      parentRoute: typeof TodosRouteRoute
    }
    '/todos/$todoId/edit': {
      id: '/todos/$todoId/edit'
      path: '/edit'
      fullPath: '/todos/$todoId/edit'
      preLoaderRoute: typeof TodosTodoIdEditRouteImport
      parentRoute: typeof TodosTodoIdRoute
    }
  }
}

interface TodosTodoIdRouteChildren {
  TodosTodoIdEditRoute: typeof TodosTodoIdEditRoute
}

const TodosTodoIdRouteChildren: TodosTodoIdRouteChildren = {
  TodosTodoIdEditRoute: TodosTodoIdEditRoute,
}

const TodosTodoIdRouteWithChildren = TodosTodoIdRoute._addFileChildren(
  TodosTodoIdRouteChildren,
)

interface TodosRouteRouteChildren {
  TodosTodoIdRoute: typeof TodosTodoIdRouteWithChildren
  TodosNewRoute: typeof TodosNewRoute
  TodosIndexRoute: typeof TodosIndexRoute
}

const TodosRouteRouteChildren: TodosRouteRouteChildren = {
  TodosTodoIdRoute: TodosTodoIdRouteWithChildren,
  TodosNewRoute: TodosNewRoute,
  TodosIndexRoute: TodosIndexRoute,
}

const TodosRouteRouteWithChildren = TodosRouteRoute._addFileChildren(
  TodosRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  TodosRouteRoute: TodosRouteRouteWithChildren,
  R404Route: R404Route,
  AboutRoute: AboutRoute,
  ErrorTestRoute: ErrorTestRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
